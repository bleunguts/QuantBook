//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MyDbModel", "FK_Price_Symbol", "Symbol", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QuantBook.Models.Symbol), "Price", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QuantBook.Models.Price), true)]

#endregion

namespace QuantBook.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MyDbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MyDbEntities object using the connection string found in the 'MyDbEntities' section of the application configuration file.
        /// </summary>
        public MyDbEntities() : base("name=MyDbEntities", "MyDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MyDbEntities object.
        /// </summary>
        public MyDbEntities(string connectionString) : base(connectionString, "MyDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MyDbEntities object.
        /// </summary>
        public MyDbEntities(EntityConnection connection) : base(connection, "MyDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Price> Prices
        {
            get
            {
                if ((_Prices == null))
                {
                    _Prices = base.CreateObjectSet<Price>("Prices");
                }
                return _Prices;
            }
        }
        private ObjectSet<Price> _Prices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Symbol> Symbols
        {
            get
            {
                if ((_Symbols == null))
                {
                    _Symbols = base.CreateObjectSet<Symbol>("Symbols");
                }
                return _Symbols;
            }
        }
        private ObjectSet<Symbol> _Symbols;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrices(Price price)
        {
            base.AddObject("Prices", price);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Symbols EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSymbols(Symbol symbol)
        {
            base.AddObject("Symbols", symbol);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyDbModel", Name="Price")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Price : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Price object.
        /// </summary>
        /// <param name="priceID">Initial value of the PriceID property.</param>
        /// <param name="symbolID">Initial value of the SymbolID property.</param>
        public static Price CreatePrice(global::System.Int32 priceID, global::System.Int32 symbolID)
        {
            Price price = new Price();
            price.PriceID = priceID;
            price.SymbolID = symbolID;
            return price;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriceID
        {
            get
            {
                return _PriceID;
            }
            set
            {
                if (_PriceID != value)
                {
                    OnPriceIDChanging(value);
                    ReportPropertyChanging("PriceID");
                    _PriceID = StructuralObject.SetValidValue(value, "PriceID");
                    ReportPropertyChanged("PriceID");
                    OnPriceIDChanged();
                }
            }
        }
        private global::System.Int32 _PriceID;
        partial void OnPriceIDChanging(global::System.Int32 value);
        partial void OnPriceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SymbolID
        {
            get
            {
                return _SymbolID;
            }
            set
            {
                OnSymbolIDChanging(value);
                ReportPropertyChanging("SymbolID");
                _SymbolID = StructuralObject.SetValidValue(value, "SymbolID");
                ReportPropertyChanged("SymbolID");
                OnSymbolIDChanged();
            }
        }
        private global::System.Int32 _SymbolID;
        partial void OnSymbolIDChanging(global::System.Int32 value);
        partial void OnSymbolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PriceOpen
        {
            get
            {
                return _PriceOpen;
            }
            set
            {
                OnPriceOpenChanging(value);
                ReportPropertyChanging("PriceOpen");
                _PriceOpen = StructuralObject.SetValidValue(value, "PriceOpen");
                ReportPropertyChanged("PriceOpen");
                OnPriceOpenChanged();
            }
        }
        private Nullable<global::System.Double> _PriceOpen;
        partial void OnPriceOpenChanging(Nullable<global::System.Double> value);
        partial void OnPriceOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PriceHigh
        {
            get
            {
                return _PriceHigh;
            }
            set
            {
                OnPriceHighChanging(value);
                ReportPropertyChanging("PriceHigh");
                _PriceHigh = StructuralObject.SetValidValue(value, "PriceHigh");
                ReportPropertyChanged("PriceHigh");
                OnPriceHighChanged();
            }
        }
        private Nullable<global::System.Double> _PriceHigh;
        partial void OnPriceHighChanging(Nullable<global::System.Double> value);
        partial void OnPriceHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PriceLow
        {
            get
            {
                return _PriceLow;
            }
            set
            {
                OnPriceLowChanging(value);
                ReportPropertyChanging("PriceLow");
                _PriceLow = StructuralObject.SetValidValue(value, "PriceLow");
                ReportPropertyChanged("PriceLow");
                OnPriceLowChanged();
            }
        }
        private Nullable<global::System.Double> _PriceLow;
        partial void OnPriceLowChanging(Nullable<global::System.Double> value);
        partial void OnPriceLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PriceClose
        {
            get
            {
                return _PriceClose;
            }
            set
            {
                OnPriceCloseChanging(value);
                ReportPropertyChanging("PriceClose");
                _PriceClose = StructuralObject.SetValidValue(value, "PriceClose");
                ReportPropertyChanged("PriceClose");
                OnPriceCloseChanged();
            }
        }
        private Nullable<global::System.Double> _PriceClose;
        partial void OnPriceCloseChanging(Nullable<global::System.Double> value);
        partial void OnPriceCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PriceAdj
        {
            get
            {
                return _PriceAdj;
            }
            set
            {
                OnPriceAdjChanging(value);
                ReportPropertyChanging("PriceAdj");
                _PriceAdj = StructuralObject.SetValidValue(value, "PriceAdj");
                ReportPropertyChanged("PriceAdj");
                OnPriceAdjChanged();
            }
        }
        private Nullable<global::System.Double> _PriceAdj;
        partial void OnPriceAdjChanging(Nullable<global::System.Double> value);
        partial void OnPriceAdjChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value, "Volume");
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private Nullable<global::System.Double> _Volume;
        partial void OnVolumeChanging(Nullable<global::System.Double> value);
        partial void OnVolumeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyDbModel", "FK_Price_Symbol", "Symbol")]
        public Symbol Symbol
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("MyDbModel.FK_Price_Symbol", "Symbol").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("MyDbModel.FK_Price_Symbol", "Symbol").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Symbol> SymbolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Symbol>("MyDbModel.FK_Price_Symbol", "Symbol");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Symbol>("MyDbModel.FK_Price_Symbol", "Symbol", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyDbModel", Name="Symbol")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Symbol : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Symbol object.
        /// </summary>
        /// <param name="symbolID">Initial value of the SymbolID property.</param>
        /// <param name="ticker">Initial value of the Ticker property.</param>
        public static Symbol CreateSymbol(global::System.Int32 symbolID, global::System.String ticker)
        {
            Symbol symbol = new Symbol();
            symbol.SymbolID = symbolID;
            symbol.Ticker = ticker;
            return symbol;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SymbolID
        {
            get
            {
                return _SymbolID;
            }
            set
            {
                if (_SymbolID != value)
                {
                    OnSymbolIDChanging(value);
                    ReportPropertyChanging("SymbolID");
                    _SymbolID = StructuralObject.SetValidValue(value, "SymbolID");
                    ReportPropertyChanged("SymbolID");
                    OnSymbolIDChanged();
                }
            }
        }
        private global::System.Int32 _SymbolID;
        partial void OnSymbolIDChanging(global::System.Int32 value);
        partial void OnSymbolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ticker
        {
            get
            {
                return _Ticker;
            }
            set
            {
                OnTickerChanging(value);
                ReportPropertyChanging("Ticker");
                _Ticker = StructuralObject.SetValidValue(value, false, "Ticker");
                ReportPropertyChanged("Ticker");
                OnTickerChanged();
            }
        }
        private global::System.String _Ticker;
        partial void OnTickerChanging(global::System.String value);
        partial void OnTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, true, "Region");
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sector
        {
            get
            {
                return _Sector;
            }
            set
            {
                OnSectorChanging(value);
                ReportPropertyChanging("Sector");
                _Sector = StructuralObject.SetValidValue(value, true, "Sector");
                ReportPropertyChanged("Sector");
                OnSectorChanged();
            }
        }
        private global::System.String _Sector;
        partial void OnSectorChanging(global::System.String value);
        partial void OnSectorChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyDbModel", "FK_Price_Symbol", "Price")]
        public EntityCollection<Price> Prices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Price>("MyDbModel.FK_Price_Symbol", "Price");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Price>("MyDbModel.FK_Price_Symbol", "Price", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
